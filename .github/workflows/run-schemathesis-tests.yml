# .github/workflows/run-schemathesis-tests.yml
name: Run Schemathesis API Tests
on:
  pull_request:
    branches:
      - main
      - unit_tests_user_app

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SCHEMATHESIS_BASE_URL: http://localhost:8000
      SCHEMATHESIS_API_SCHEMA_PATH: api/schema/
      PYTHONUNBUFFERED: 1
      DB_USER: backend_user
      DB_PASSWORD: backend_pass
      DB_NAME: backend_db
      DB_HOST: localhost
      DB_PORT: 5432
      DB_SSLMODE: disable
      DJANGO_SETTINGS_MODULE: src.test_settings
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: backend_user
          POSTGRES_PASSWORD: backend_pass
          POSTGRES_DB: backend_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U backend_user -d backend_db" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
      mailcatcher:
        image: schickling/mailcatcher
        ports:
          - 1025:1025
          - 1080:1080
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run migrations
        run: |
          python manage.py migrate
      - name: Start Django server
        run: |
          python manage.py runserver 0.0.0.0:8000 &
          for i in {1..10}; do
            nc -z localhost 8000 && break
            sleep 2
          done
      - name: Run Schemathesis tests
        uses: schemathesis/action@v2
        with:
          schema: '${{ env.SCHEMATHESIS_BASE_URL }}/${{ env.SCHEMATHESIS_API_SCHEMA_PATH }}'
          args: >-
            --header "Authorization: Bearer ${{ secrets.API_TOKEN }}"
            --report junit
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: schemathesis-results
          path: schemathesis-report/

      - name: Cleanup
        if: always()
        run: docker compose down